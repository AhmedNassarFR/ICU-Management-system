/src/components/ManagerDashboard.css

/src/components/ICUManagement.jsx
```jsx
import React, { useState, useEffect } from 'react';
import axios from 'axios';
import './ManagerDashboard.css';

const ICUManagement = () => {
    const [icus, setICUs] = useState([]);
    const [newICU, setNewICU] = useState({
        hospitalId: '',
        specialization: '',
        status: ''
    });

    const fetchICUs = async () => {
        try {
            const response = await axios.get('/api/icus');
            setICUs(response.data.data);
        } catch (error) {
            console.error('Error fetching ICUs:', error);
        }
    };

    const handleAddICU = async (e) => {
        e.preventDefault();
        try {
            await axios.post('/api/icu/register', newICU);
            fetchICUs();
            setNewICU({ hospitalId: '', specialization: '', status: '' });
        } catch (error) {
            console.error('Error adding ICU:', error);
        }
    };

    useEffect(() => {
        fetchICUs();
    }, []);

    return (
        <div className="dashboard-card">
            <h2>ICU Management</h2>
            <form onSubmit={handleAddICU} className="form-container">
                <div className="form-group">
                    <label>Hospital ID</label>
                    <input
                        type="text"
                        value={newICU.hospitalId}
                        onChange={(e) => setNewICU({...newICU, hospitalId: e.target.value})}
                        required
                    />
                </div>
                <div className="form-group">
                    <label>Specialization</label>
                    <input
                        type="text"
                        value={newICU.specialization}
                        onChange={(e) => setNewICU({...newICU, specialization: e.target.value})}
                        required
                    />
                </div>
                <div className="form-group">
                    <label>Status</label>
                    <select
                        value={newICU.status}
                        onChange={(e) => setNewICU({...newICU, status: e.target.value})}
                        required
                    >
                        <option value="">Select Status</option>
                        <option value="Available">Available</option>
                        <option value="Occupied">Occupied</option>
                    </select>
                </div>
                <button type="submit" className="btn">Add ICU</button>
            </form>

            <table className="table">
                <thead>
                    <tr>
                        <th>Hospital</th>
                        <th>Specialization</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody>
                    {icus.map((icu) => (
                        <tr key={icu._id}>
                            <td>{icu.hospital.name}</td>
                            <td>{icu.specialization}</td>
                            <td>{icu.status}</td>
                        </tr>
                    ))}
                </tbody>
            </table>
        </div>
    );
};

export default ICUManagement;
```

/src/components/EmployeeManagement.jsx
```jsx
import React, { useState, useEffect } from 'react';
import axios from 'axios';
import './ManagerDashboard.css';

const EmployeeManagement = () => {
    const [employees, setEmployees] = useState([]);
    const [newEmployee, setNewEmployee] = useState({
        firstName: '',
        lastName: '',
        userName: '',
        email: '',
        phone: '',
        role: '',
        gender: '',
        userPass: ''
    });

    const fetchEmployees = async () => {
        try {
            const response = await axios.get('/api/employees');
            setEmployees(response.data.data);
        } catch (error) {
            console.error('Error fetching employees:', error);
        }
    };

    const handleAddEmployee = async (e) => {
        e.preventDefault();
        try {
            await axios.post('/api/employee/add', newEmployee);
            fetchEmployees();
            setNewEmployee({
                firstName: '',
                lastName: '',
                userName: '',
                email: '',
                phone: '',
                role: '',
                gender: '',
                userPass: ''
            });
        } catch (error) {
            console.error('Error adding employee:', error);
        }
    };

    useEffect(() => {
        fetchEmployees();
    }, []);

    return (
        <div className="dashboard-card">
            <h2>Employee Management</h2>
            <form onSubmit={handleAddEmployee} className="form-container">
                <div className="form-group">
                    <label>First Name</label>
                    <input
                        type="text"
                        value={newEmployee.firstName}
                        onChange={(e) => setNewEmployee({...newEmployee, firstName: e.target.value})}
                        required
                    />
                </div>
                <div className="form-group">
                    <label>Last Name</label>
                    <input
                        type="text"
                        value={newEmployee.lastName}
                        onChange={(e) => setNewEmployee({...newEmployee, lastName: e.target.value})}
                        required
                    />
                </div>
                <div className="form-group">
                    <label>Username</label>
                    <input
                        type="text"
                        value={newEmployee.userName}
                        onChange={(e) => setNewEmployee({...newEmployee, userName: e.target.value})}
                        required
                    />
                </div>
                <div className="form-group">
                    <label>Email</label>
                    <input
                        type="email"
                        value={newEmployee.email}
                        onChange={(e) => setNewEmployee({...newEmployee, email: e.target.value})}
                        required
                    />
                </div>
                <div className="form-group">
                    <label>Phone</label>
                    <input
                        type="tel"
                        value={newEmployee.phone}
                        onChange={(e) => setNewEmployee({...newEmployee, phone: e.target.value})}
                        required
                    />
                </div>
                <div className="form-group">
                    <label>Role</label>
                    <select
                        value={newEmployee.role}
                        onChange={(e) => setNewEmployee({...newEmployee, role: e.target.value})}
                        required
                    >
                        <option value="">Select Role</option>
                        <option value="Nurse">Nurse</option>
                        <option value="Cleaner">Cleaner</option>
                        <option value="Receptionist">Receptionist</option>
                        <option value="Manager">Manager</option>
                    </select>
                </div>
                <div className="form-group">
                    <label>Gender</label>
                    <select
                        value={newEmployee.gender}
                        onChange={(e) => setNewEmployee({...newEmployee, gender: e.target.value})}
                        required
                    >
                        <option value="">Select Gender</option>
                        <option value="Male">Male</option>
                        <option value="Female">Female</option>
                        <option value="Other">Other</option>
                    </select>
                </div>
                <div className="form-group">
                    <label>Password</label>
                    <input
                        type="password"
                        value={newEmployee.userPass}
                        onChange={(e) => setNewEmployee({...newEmployee, userPass: e.target.value})}
                        required
                    />
                </div>
                <button type="submit" className="btn">Add Employee</button>
            </form>

            <table className="table">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Username</th>
                        <th>Role</th>
                        <th>Email</th>
                    </tr>
                </thead>
                <tbody>
                    {employees.map((employee) => (
                        <tr key={employee._id}>
                            <td>{employee.firstName} {employee.lastName}</td>
                            <td>{employee.userName}</td>
                            <td>{employee.role}</td>
                            <td>{employee.email}</td>
                        </tr>
                    ))}
                </tbody>
            </table>
        </div>
    );
};

export default EmployeeManagement;
```

/src/components/VacationManagement.jsx
```jsx
import React, { useState, useEffect } from 'react';
import axios from 'axios';
import './ManagerDashboard.css';

const VacationManagement = () => {
    const [vacationRequests, setVacationRequests] = useState([]);
    const [newRequest, setNewRequest] = useState({
        employeeId: '',
        startDate: '',
        endDate: ''
    });

    const fetchVacationRequests = async () => {
        try {
            const response = await axios.get('/api/vacation-requests');
            setVacationRequests(response.data.data);
        } catch (error) {
            console.error('Error fetching vacation requests:', error);
        }
    };

    const handleCreateVacationRequest = async (e) => {
        e.preventDefault();
        try {
            await axios.post('/api/vacation-request', newRequest);
            fetchVacationRequests();
            setNewRequest({ employeeId: '', startDate: '', endDate: '' });
        } catch (error) {
            console.error('Error creating vacation request:', error);
        }
    };

    const handleUpdateVacationRequest = async (requestId, status) => {
        try {
            await axios.patch(`/api/vacation-request/${requestId}`, { status });
            fetchVacationRequests();
        } catch (error) {
            console.error('Error updating vacation request:', error);
        }
    };

    useEffect(() => {
        fetchVacationRequests();
    }, []);

    return (
        <div className="dashboard-card">
            <h2>Vacation Management</h2>
            <form onSubmit={handleCreateVacationRequest} className="form-container">
                <div className="form-group">
                    <label>Employee ID</label>
                    <input
                        type="text"
                        value={newRequest.employeeId}
                        onChange={(e) => setNewRequest({...newRequest, employeeId: e.target.value})}
                        required
                    />
                </div>
                <div className="form-group">
                    <label>Start Date</label>
                    <input
                        type="date"
                        value={newRequest.startDate}
                        onChange={(e) => setNewRequest({...newRequest, startDate: e.target.value})}
                        required
                    />
                </div>
                <div className="form-group">
                    <label>End Date</label>
                    <input
                        type="date"
                        value={newRequest.endDate}
                        onChange={(e) => setNewRequest({...newRequest, endDate: e.target.value})}
                        required
                    />
                </div>
                <button type="submit" className="btn">Create Vacation Request</button>
            </form>

            <table className="table">
                <thead>
                    <tr>
                        <th>Employee</th>
                        <th>Start Date</th>
                        <th>End Date</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    {vacationRequests.map((request) => (
                        <tr key={request._id}>
                            <td>{request.employee.firstName} {request.employee.lastName}</td>
                            <td>{new Date(request.startDate).toLocaleDateString()}</td>
                            <td>{new Date(request.endDate).toLocaleDateString()}</td>
                            <td>{request.status}</td>
                            <td>
                                <button 
                                    className="btn" 
                                    onClick={() => handleUpdateVacationRequest(request._id, 'Approved')}
                                >
                                    Approve
                                </button>
                                <button 
                                    className="btn" 
                                    onClick={() => handleUpdateVacationRequest(request._id, 'Rejected')}
                                >
                                    Reject
                                </button>
                            </td>
                        </tr>
                    ))}
                </tbody>
            </table>
        </div>
    );
};

export default VacationManagement;
```

/src/components/ManagerDashboard.jsx
```jsx
import React, { useState } from 'react';
import ICUManagement from './ICUManagement';
import EmployeeManagement from './EmployeeManagement';
import VacationManagement from './VacationManagement';
import './ManagerDashboard.css';

const ManagerDashboard = () => {
    const [activeTab, setActiveTab] = useState('icu');

    const renderActiveComponent = () => {
        switch (activeTab) {
            case 'icu':
                return <ICUManagement />;
            case 'employees':
                return <EmployeeManagement />;
            case 'vacations':
                return